# -*- mode: org -*-
#+SETUPFILE: ~/.vault/cfgs/org-central/org-setupfile
#+TITLE: notes on Genesis // Roadmap

#+TAGS: milestone_blocker bug feature cannot_reproduce documentation expected_behavior expert_review_needed fixed_pending_verification help_wanted info_needed needs_testcase platform_macosx wrt_packaging question regression needs_discussion needs_changes tests upstream_bug wont_fix_for_now release_notes subsys_salt_api subsys_salt_cloud subsys_salt_ssh subsys_ssh_syndic

** release targets		    :proj_genesis_release_target:
   :PROPERTIES:
   :ID:       245FE7E7-4F7D-476C-AD91-D0E2DCC1CDDB
   :END:
*** milestone: v1 					    :target_v01dot00:
***** TODO External Logging, Log parsing, w/ monitoring a/ alerting on Salt Master
***** TODO Configurable Reactor, (for Alerting, et al) on Events w/i Salt's Graph
***** TODO External Targeting: integrate AD as pillar source
***** TODO External Returner Sink: SysLog (to Splunk?), Mongo, MySQL, ODBC, PagerDuty, PushOver, Email, et al
***** TODO External Variable/"Runtime" Pillar Source: Mongo, Consul, Etcd
***** IMPLEMENTED Change-Controlled States
 - context ::
   - [1/1] overview
     - [X] use gitfs for state trees
***** IMPLEMENTED Change-Controlled Master config
 - context ::
   - [1/1] overview
     - [X] use pillar and salt-formula for master config
*** milestone: v0.4                                       :target_v00dot04:
***** STARTED Salt PKI git-sync and management
- context ::
  - [5/7] overvew
    - [X] auto-commit on changes w/ inotify
    - [X] seed the repo w/ =.gitignore=
    - [X] pull from upstream repo on branch
    - [X] per-minion branches
    - [X] destructive updates from =git.latest=
    - [ ] event-based checkout from upstream 
    - [-] enable git-based salt key logging a/ mgmt
  - info/notes
    - on Initial Understanding a/o Discovery
      - ideally, this should use pillar_tree pillar.gitfs rather than a wholly seperate repo
        - pillar_tree via pillar gitfs isn't available yet, https://github.com/saltstack/salt/issues/19263
      - this should only be used in a situation where permissions can be managed discretely per-branch
      - always follow the rule of least-required-privilege
      - the git option =force-with-lease= would make pushes safer but as of [2016-08-30 Tue] will be too new on some systems
    - on state reactor: event-triggered git add/commit/push
      - minion.conf contains an inotify beacon that triggers on file changes
      - master.conf contains a reactor config that associates an event bus tag w/ a reactor (think: event handler)
      - the reactor performs simple filtering, munges event data into the subcontext of the appropriate subroutines, then returns
      - the actioner may be any (set) of state, execution modules, runner, orchestrate or other reactors
      - the actioner will perform work and (depending on the design) may make use of the tunnelled event data
    - on Means to Receive Remote Events
      - https://help.github.com/articles/managing-notifications-for-pushes-to-a-repository/
      - in practice this we'll expect this to be a privately hosted repo w/ more integration control than github
      - all the same, here's Github's write up: https://help.github.com/articles/managing-notifications-for-pushes-to-a-repository/

*** milestone: v0.3                                       :target_v00dot03:
***** TODO bootstrap Kubernetes as basis for service integration
*** milestone: v0.2                                       :target_v00dot02:
***** STARTED Quick Standup Rest API
:LOGBOOK:
- State "STARTED"    from "TODO"       [2016-08-30 Tue 20:34]
:END:
 - context ::
   - [0/0] overview
     - [ ] quick-deploy w/ salt-formula
*** milestone: v0.1                                       :target_v00dot01:
***** STARTED Stable, Extensible, Rapidly deployable Salt Master config using Salt Formula w/ Genesis paradigm
 - context ::
   - [3/5] overview
     - [X] state targeting by pillar
     - [X] git-backed "bootstrap" State and Pillar tree
     - [X] first-glance documentation
     - [ ] master gets un-prompted updates from State and Pillar git repos
     - [ ] demo-able on demand in lab in Vagrant
** unfiled changes
   :PROPERTIES:
   :ID:       44290E69-DF96-4AB5-951D-31C1554DAF10
   :END:
*** enhancement requests: genesis-matrix 
***** REPORTED facility for switching between gema-scenarios
 - context :: 
   - [0/1] overview
     - [ ] changing scenes shouldn't affect state in genesis-ctl
   - info/notes
     - on Initial Understanding a/o Discovery
     - on Candidate Solutions
       - switch between =./Saltfile='s
       - symlink =./etc/salt/roster= to an untracked dir, then back into =./etc/salt/conf.d=
***** REPORTED Support running GeMa on Windows
***** REPORTED Support running GeMa on Linux
***** REPORTED migrate to =pyinvoke= from =gnumake=
***** REPORTED add '_meta' tag, for improved intrinsic documentation, to all of the packer 'vars' and 'template' files
***** REPORTED add 'pre-flight-check' capability
***** REPORTED add 'make online' command to simplify getting started
***** REPORTED end -to- end VM life-cycle mgmt
 - context ::
   - [0/0] overview
     - [ ] demo a/ document VM creation w/ Salt
     - [ ] demo a/ document VM destruction w/ Salt
     - [ ] demo a/ document VM early provisioning w/ Salt (if possible)
   - Questions
     - Q: in Salt's YAML, to set a line as a comment, does the HASH need to be in the first space or simply the first non-whitespace char
       - TABs in the first space are illegal
       - A: looks like, as long as the comment-HASH isn't preceeded by
         a TAB, (which is always illegal during parsing), the HASH
         symbol can be anywhere on the line
         - this means any indentation of line can be commented in any way desired as long as it doesn't involve any TABs to the left of the HASH mark
         - TABs after the HASH are always OK
   - log
     - [2015-02-13 Fri]
       - [ ] bug: configs in =./etc/salt/cloud.profiles.d= are not read 
         - doesn't respect symlinks, though hardlinks are ok
         - doesn't respect 'conf.*' config, must be '*.conf'
         - this is a problem for me because it breaks my config convention

*** enhancement requests: Salt States a/o Related Content Areas
***** REPORTED create state to disable password logins, allowing only pubkey auth
***** REPORTED create script to auto-deploy configs required for salt clients
***** REPORTED disable screensavers for VDI servers
***** REPORTED add git-gui to the start menu
***** REPORTED detect VDI role, if a server is primarily accessed via VDI
